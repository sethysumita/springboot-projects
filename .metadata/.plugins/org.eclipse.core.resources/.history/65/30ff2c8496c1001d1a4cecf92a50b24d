/*
 * package com.example.demo.service;
 * 
 * import java.util.Collection; import java.util.stream.Collectors;
 * 
 * import org.springframework.security.core.GrantedAuthority; import
 * org.springframework.security.core.authority.SimpleGrantedAuthority; import
 * org.springframework.security.core.userdetails.UserDetails;
 * 
 * import com.example.demo.entity.User;
 * 
 * import lombok.Data;
 * 
 * @Data public class MyUserDetails implements UserDetails { private User user;
 * 
 * 
 * private static final long serialVersionUID = 1256711395932122675L;
 * 
 * @Override public Collection<? extends GrantedAuthority> getAuthorities() { //
 * TODO Auto-generated method stub return user.getRoles().stream().map(role ->
 * new SimpleGrantedAuthority("Role" + role)) .collect(Collectors.toList());
 * 
 * }
 * 
 * @Override public String getPassword() {
 * 
 * return user.getPassword(); }
 * 
 * @Override public String getUsername() {
 * 
 * return user.getUsername(); }
 * 
 * @Override public boolean isAccountNonExpired() {
 * 
 * return true; }
 * 
 * @Override public boolean isAccountNonLocked() {
 * 
 * return true; }
 * 
 * @Override public boolean isCredentialsNonExpired() {
 * 
 * return true; }
 * 
 * @Override public boolean isEnabled() {
 * 
 * return true; }
 * 
 * }
 */